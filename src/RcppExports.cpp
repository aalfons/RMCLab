// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rdmc_cpp
Rcpp::List rdmc_cpp(const arma::mat& X, const arma::umat& idx_NA, const arma::umat& idx_observed, const arma::mat& values, const Rcpp::NumericVector& lambda, const arma::uword& rank_max, const std::string& type, const double& svd_tol, const std::string& loss, const double& loss_const, const double& delta, double mu, const double& conv_tol, const int& max_iter, arma::mat L, arma::mat Theta);
RcppExport SEXP _rdmc_rdmc_cpp(SEXP XSEXP, SEXP idx_NASEXP, SEXP idx_observedSEXP, SEXP valuesSEXP, SEXP lambdaSEXP, SEXP rank_maxSEXP, SEXP typeSEXP, SEXP svd_tolSEXP, SEXP lossSEXP, SEXP loss_constSEXP, SEXP deltaSEXP, SEXP muSEXP, SEXP conv_tolSEXP, SEXP max_iterSEXP, SEXP LSEXP, SEXP ThetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::umat& >::type idx_NA(idx_NASEXP);
    Rcpp::traits::input_parameter< const arma::umat& >::type idx_observed(idx_observedSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const arma::uword& >::type rank_max(rank_maxSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type type(typeSEXP);
    Rcpp::traits::input_parameter< const double& >::type svd_tol(svd_tolSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type loss(lossSEXP);
    Rcpp::traits::input_parameter< const double& >::type loss_const(loss_constSEXP);
    Rcpp::traits::input_parameter< const double& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const double& >::type conv_tol(conv_tolSEXP);
    Rcpp::traits::input_parameter< const int& >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type L(LSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Theta(ThetaSEXP);
    rcpp_result_gen = Rcpp::wrap(rdmc_cpp(X, idx_NA, idx_observed, values, lambda, rank_max, type, svd_tol, loss, loss_const, delta, mu, conv_tol, max_iter, L, Theta));
    return rcpp_result_gen;
END_RCPP
}
// rdmc_autotune_cpp
Rcpp::List rdmc_autotune_cpp(const arma::mat& X, const arma::umat& idx_NA, const arma::umat& idx_observed, const arma::mat& values, const double& lambda_start, const double& lambda_factor, const arma::uword& rank_max, const std::string& type, const double& svd_tol, const std::string& loss, const double& loss_const, const double& delta, double mu, const double& conv_tol, const int& max_iter, arma::mat L, arma::mat Theta);
RcppExport SEXP _rdmc_rdmc_autotune_cpp(SEXP XSEXP, SEXP idx_NASEXP, SEXP idx_observedSEXP, SEXP valuesSEXP, SEXP lambda_startSEXP, SEXP lambda_factorSEXP, SEXP rank_maxSEXP, SEXP typeSEXP, SEXP svd_tolSEXP, SEXP lossSEXP, SEXP loss_constSEXP, SEXP deltaSEXP, SEXP muSEXP, SEXP conv_tolSEXP, SEXP max_iterSEXP, SEXP LSEXP, SEXP ThetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::umat& >::type idx_NA(idx_NASEXP);
    Rcpp::traits::input_parameter< const arma::umat& >::type idx_observed(idx_observedSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda_start(lambda_startSEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda_factor(lambda_factorSEXP);
    Rcpp::traits::input_parameter< const arma::uword& >::type rank_max(rank_maxSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type type(typeSEXP);
    Rcpp::traits::input_parameter< const double& >::type svd_tol(svd_tolSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type loss(lossSEXP);
    Rcpp::traits::input_parameter< const double& >::type loss_const(loss_constSEXP);
    Rcpp::traits::input_parameter< const double& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const double& >::type conv_tol(conv_tolSEXP);
    Rcpp::traits::input_parameter< const int& >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type L(LSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Theta(ThetaSEXP);
    rcpp_result_gen = Rcpp::wrap(rdmc_autotune_cpp(X, idx_NA, idx_observed, values, lambda_start, lambda_factor, rank_max, type, svd_tol, loss, loss_const, delta, mu, conv_tol, max_iter, L, Theta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rdmc_rdmc_cpp", (DL_FUNC) &_rdmc_rdmc_cpp, 16},
    {"_rdmc_rdmc_autotune_cpp", (DL_FUNC) &_rdmc_rdmc_autotune_cpp, 17},
    {NULL, NULL, 0}
};

RcppExport void R_init_rdmc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
